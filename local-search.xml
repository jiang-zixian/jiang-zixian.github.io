<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Windows11:Docker Desktop修改镜像下载路径（Disk image location）</title>
    <link href="/2025/01/21/Windows11-Docker-Desktop%E4%BF%AE%E6%94%B9%E9%95%9C%E5%83%8F%E4%B8%8B%E8%BD%BD%E8%B7%AF%E5%BE%84%EF%BC%88Disk-image-location%EF%BC%89/"/>
    <url>/2025/01/21/Windows11-Docker-Desktop%E4%BF%AE%E6%94%B9%E9%95%9C%E5%83%8F%E4%B8%8B%E8%BD%BD%E8%B7%AF%E5%BE%84%EF%BC%88Disk-image-location%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>操作系统：windows11</p><p>步骤：</p><ol><li>打开Docker Desktop</li><li>点击右上角设置<br><img src="/../img/image.png" alt="alt text"></li><li>Resources-&gt;Disk image location-&gt;Apply&amp;restart<br><img src="/../img/image-1.png" alt="alt text"></li></ol>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>实践技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Langchain-Chatchat(0.2.x)本地轻量化部署+在线大模型api</title>
    <link href="/2025/01/21/Langchain-Chatchat-0-2-x-%E6%9C%AC%E5%9C%B0%E8%BD%BB%E9%87%8F%E5%8C%96%E9%83%A8%E7%BD%B2-%E5%9C%A8%E7%BA%BF%E5%A4%A7%E6%A8%A1%E5%9E%8Bapi/"/>
    <url>/2025/01/21/Langchain-Chatchat-0-2-x-%E6%9C%AC%E5%9C%B0%E8%BD%BB%E9%87%8F%E5%8C%96%E9%83%A8%E7%BD%B2-%E5%9C%A8%E7%BA%BF%E5%A4%A7%E6%A8%A1%E5%9E%8Bapi/</url>
    
    <content type="html"><![CDATA[<p>感谢这位大佬的<a href="https://blog.csdn.net/YELLOWAUG/article/details/136241731">部署笔记</a>，我在此基础上做出一些说明和补充</p><h2 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h2><p>操作系统：windows 11<br>需提前下载：</p><ul><li>Docker Desktop</li><li>python 3.11.x，我用的3.11.11</li><li>线上大模型api key的获取，本人暂时只获取了zhipu-api</li></ul><h2 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h2><h3 id="docker拉取官方python-3-11的镜像"><a href="#docker拉取官方python-3-11的镜像" class="headerlink" title="docker拉取官方python 3.11的镜像"></a>docker拉取官方python 3.11的镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull python:3.11<br></code></pre></td></tr></table></figure><blockquote><p>Docker Desktop默认的镜像下载地址在C盘，建议将镜像默认下载地址放到非C盘，以防C盘爆满，具体操作见<a href="/2025/01/21/Windows11-Docker-Desktop%E4%BF%AE%E6%94%B9%E9%95%9C%E5%83%8F%E4%B8%8B%E8%BD%BD%E8%B7%AF%E5%BE%84%EF%BC%88Disk-image-location%EF%BC%89/" title="Windows11:Docker Desktop修改镜像下载路径（Disk image location）">Windows11:Docker Desktop修改镜像下载路径（Disk image location）</a></p></blockquote><h3 id="运行Docker容器"><a href="#运行Docker容器" class="headerlink" title="运行Docker容器"></a>运行Docker容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run -itd --name chatlite -v /etc/localtime:/etc/localtime:ro -p 18501:8501 python:3.11<br></code></pre></td></tr></table></figure><h3 id="下载Langchain-Chatchat-0-2-x项目源码"><a href="#下载Langchain-Chatchat-0-2-x项目源码" class="headerlink" title="下载Langchain-Chatchat 0.2.x项目源码"></a>下载Langchain-Chatchat 0.2.x项目源码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> -b 0.2.final --recursive https://github.com/chatchat-space/Langchain-Chatchat.git<br></code></pre></td></tr></table></figure><blockquote><p>这里指定0.2.final分支，不使用最新的0.3.x版本，本人暂时未成功部署0.3.x</p></blockquote><h3 id="Langchain-Chatchat源码修改"><a href="#Langchain-Chatchat源码修改" class="headerlink" title="Langchain-Chatchat源码修改"></a>Langchain-Chatchat源码修改</h3><ol><li><p>根目录下config文件夹下面的文件格式原本为*.py.example, 要全部改成.py，修改后如下<br><img src="/../img/image-2.png" alt="alt text"></p></li><li><p>修改根目录下的configs&#x2F;model_config.py配置文件<br>修改三个地方：</p></li></ol><ul><li>“LLM_MODELS”<br>  修改为 LLM_MODELS &#x3D; [“zhipu-api”, “openai-api”]<blockquote><p>想要使用什么其他的api，在后面添加即可</p></blockquote></li><li>“LLM_DEVICE”<br>  修改为 LLM_DEVICE &#x3D; “cpu”<blockquote><p>我们在LLM_MODELS 这个字段里把线下的大模型给删除了，这样程序在加载模型的时候就不会加载本地模型了。只要不加载本地LLM模型，就不会有对GPU的计算需求，LLM_DEVICE 这个字段改成“CPU” 目的是让模型加载方式是用CPU加载。</p></blockquote></li><li>“zhipu-api”<br>  要补充自己的api key（分别上官网获取）<br>  <img src="/../img/image-3.png" alt="alt text"><blockquote><p>想要使用什么api，自行填充对应的key即可，本人暂时只获取了zhipu-api</p></blockquote></li></ul><h3 id="将项目文件夹copy到容器中"><a href="#将项目文件夹copy到容器中" class="headerlink" title="将项目文件夹copy到容器中"></a>将项目文件夹copy到容器中</h3><p>容器ID在docker run之后用docker ps指令获取即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">cp</span> ./Langchain-Chatchat-2 容器ID:/home <br></code></pre></td></tr></table></figure><h3 id="进入容器终端-进入项目目录"><a href="#进入容器终端-进入项目目录" class="headerlink" title="进入容器终端,进入项目目录"></a>进入容器终端,进入项目目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it 容器ID /bin/bash<br><span class="hljs-built_in">cd</span> /home/Langchain-Chatchat-2<br></code></pre></td></tr></table></figure><h3 id="下载依赖"><a href="#下载依赖" class="headerlink" title="下载依赖"></a>下载依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install -r requirements_lite.txt -i https://pypi.tuna.tsinghua.edu.cn/simple/<br><br>pip install -r requirements_webui.txt -i https://pypi.tuna.tsinghua.edu.cn/simple/<br></code></pre></td></tr></table></figure><h3 id="启动Langchain-Chatchat（只运行线上LLM-API的方式）"><a href="#启动Langchain-Chatchat（只运行线上LLM-API的方式）" class="headerlink" title="启动Langchain-Chatchat（只运行线上LLM API的方式）"></a>启动Langchain-Chatchat（只运行线上LLM API的方式）</h3><p>要在项目的根目录下运行该命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python startup.py -a --lite<br></code></pre></td></tr></table></figure><p>注意：启动过程中，会报以下类似错误：<br><img src="/../img/image-4.png" alt="alt text"><br>只是因为缺少了一些依赖，我们使用pip install单独下载即可，比如对于上述错误，我们只需要</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install markdownify<br></code></pre></td></tr></table></figure><h3 id="启动成功"><a href="#启动成功" class="headerlink" title="启动成功"></a>启动成功</h3><p>终端显示：<br><img src="/../img/image-5.png" alt="alt text"></p><p>访问该URL即可</p><p><img src="/../img/image-6.png" alt="alt text"></p><h2 id="启动步骤"><a href="#启动步骤" class="headerlink" title="启动步骤"></a>启动步骤</h2><h3 id="启动windows的docker"><a href="#启动windows的docker" class="headerlink" title="启动windows的docker"></a>启动windows的docker</h3><p>打开docker软件即可</p><h3 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker start chatlite<br></code></pre></td></tr></table></figure><h3 id="进入命令行"><a href="#进入命令行" class="headerlink" title="进入命令行"></a>进入命令行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it chatlite bash<br></code></pre></td></tr></table></figure><h3 id="在容器中启动服务"><a href="#在容器中启动服务" class="headerlink" title="在容器中启动服务"></a>在容器中启动服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /home/Langchain-Chatchat-2<br>python startup.py -a --lite<br></code></pre></td></tr></table></figure><h3 id="在浏览器里访问"><a href="#在浏览器里访问" class="headerlink" title="在浏览器里访问"></a>在浏览器里访问</h3><p>访问 <code>http://0.0.0.0:8501</code></p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>实践技术</tag>
      
      <tag>LLM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>常用指令</title>
    <link href="/2024/10/12/%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
    <url>/2024/10/12/%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h2 id="访问git超时时（windows）"><a href="#访问git超时时（windows）" class="headerlink" title="访问git超时时（windows）"></a>访问git超时时（windows）</h2><p>取消系统代理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash">git config --global --<span class="hljs-built_in">unset</span> http.proxy <br>git config --global --<span class="hljs-built_in">unset</span> https.proxy<br></code></pre></td></tr></table></figure><h2 id="npm-network-error问题"><a href="#npm-network-error问题" class="headerlink" title="npm network error问题"></a>npm network error问题</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm config <span class="hljs-built_in">set</span> registry https://registry.npmmirror.com<br></code></pre></td></tr></table></figure><p>查看npm配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm config list<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>实践技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>非C盘安装WSL2</title>
    <link href="/2024/10/11/%E9%9D%9EC%E7%9B%98%E5%AE%89%E8%A3%85WSL2/"/>
    <url>/2024/10/11/%E9%9D%9EC%E7%9B%98%E5%AE%89%E8%A3%85WSL2/</url>
    
    <content type="html"><![CDATA[<h1 id="非C盘安装WSL2"><a href="#非C盘安装WSL2" class="headerlink" title="非C盘安装WSL2"></a>非C盘安装WSL2</h1><h2 id="第一种方法（失败，下载的WSL2不能git-clone）"><a href="#第一种方法（失败，下载的WSL2不能git-clone）" class="headerlink" title="第一种方法（失败，下载的WSL2不能git clone）"></a>第一种方法（失败，下载的WSL2不能git clone）</h2><h3 id="install-WSL2"><a href="#install-WSL2" class="headerlink" title="install WSL2"></a>install WSL2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">wsl --install<br>dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart<br>dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart<br>wsl --set-default-version 2<br></code></pre></td></tr></table></figure><h3 id="uninstall-ubuntu"><a href="#uninstall-ubuntu" class="headerlink" title="uninstall ubuntu"></a>uninstall ubuntu</h3><p>在电脑中直接卸载即可</p><h3 id="install-ubuntu-in-F"><a href="#install-ubuntu-in-F" class="headerlink" title="install ubuntu in F:"></a>install ubuntu in F:</h3><p>win 终端运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> F:<br><span class="hljs-built_in">mkdir</span> Linux//创建一个linux文件夹<br><span class="hljs-built_in">cd</span> Linux<br>Invoke-WebRequest -Uri https://wsldownload.azureedge.net/Ubuntu_2004.2020.424.0_x64.appx -OutFile Ubuntu20.04.appx -UseBasicParsing//下载ubuntu20.04<br>Rename-Item .\Ubuntu20.04.appx Ubuntu.zip<br>Expand-Archive .\Ubuntu.zip -Verbose<br><span class="hljs-built_in">cd</span> .\Ubuntu\<br>.\ubuntu2004.exe<br></code></pre></td></tr></table></figure><p>之后设置自己的username和password即可</p><h3 id="问题-WSL2-请启用虚拟机平台-Windows-功能并确保在-BIOS-中启用虚拟化"><a href="#问题-WSL2-请启用虚拟机平台-Windows-功能并确保在-BIOS-中启用虚拟化" class="headerlink" title="问题:WSL2 请启用虚拟机平台 Windows 功能并确保在 BIOS 中启用虚拟化"></a>问题:WSL2 请启用虚拟机平台 Windows 功能并确保在 BIOS 中启用虚拟化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">bcdedit /set hypervisorlaunchtype off（之后可用vmware）<br>bcdedit /set hypervisorlaunchtype auto<br></code></pre></td></tr></table></figure><p>之后重启电脑即可</p><h2 id="第二种方法（安装在C盘之后迁移至F盘）"><a href="#第二种方法（安装在C盘之后迁移至F盘）" class="headerlink" title="第二种方法（安装在C盘之后迁移至F盘）"></a>第二种方法（安装在C盘之后迁移至F盘）</h2><h3 id="下载-WSL2"><a href="#下载-WSL2" class="headerlink" title="下载 WSL2"></a>下载 WSL2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wsl --install Ubuntu-20.04<br></code></pre></td></tr></table></figure><h3 id="终止正在运行的wsl"><a href="#终止正在运行的wsl" class="headerlink" title="终止正在运行的wsl"></a>终止正在运行的wsl</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wsl --shutdown<br></code></pre></td></tr></table></figure><h3 id="将需要迁移的Linux，进行导出"><a href="#将需要迁移的Linux，进行导出" class="headerlink" title="将需要迁移的Linux，进行导出"></a>将需要迁移的Linux，进行导出</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wsl --<span class="hljs-built_in">export</span> Ubuntu-20.04 F:/export.tar<br></code></pre></td></tr></table></figure><h3 id="导出完成之后，将原有的分发进行卸载"><a href="#导出完成之后，将原有的分发进行卸载" class="headerlink" title="导出完成之后，将原有的分发进行卸载"></a>导出完成之后，将原有的分发进行卸载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wsl --unregister Ubuntu-20.04<br></code></pre></td></tr></table></figure><h3 id="然后将导出的文件放到需要保存的地方，进行导入"><a href="#然后将导出的文件放到需要保存的地方，进行导入" class="headerlink" title="然后将导出的文件放到需要保存的地方，进行导入"></a>然后将导出的文件放到需要保存的地方，进行导入</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wsl --import Ubuntu-20.04 F:\<span class="hljs-built_in">export</span>\ F:\export.tar --version 2<br></code></pre></td></tr></table></figure><h3 id="启动WSL并进入原来的user"><a href="#启动WSL并进入原来的user" class="headerlink" title="启动WSL并进入原来的user"></a>启动WSL并进入原来的user</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">wsl<br>su jiangzixian<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>实践技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>江紫弦的个人博客（用于语法测试）</title>
    <link href="/2024/07/25/%E6%B1%9F%E7%B4%AB%E5%BC%A6%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2024/07/25/%E6%B1%9F%E7%B4%AB%E5%BC%A6%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="语法测试"><a href="#语法测试" class="headerlink" title="语法测试"></a>语法测试</h2><p><em>这是斜体</em> 或 <em>这也是斜体</em><br><strong>这是粗体</strong><br><em><strong>这是加粗斜体</strong></em><br><del>这是删除线</del></p><h2 id="标号"><a href="#标号" class="headerlink" title="标号"></a>标号</h2><ol><li>为什么</li><li>第二个</li><li>lingorm</li></ol><h2 id="try"><a href="#try" class="headerlink" title="try"></a>try</h2><p>管理员界面尝试，原来可以这样写<br>访问<code>http://localhost:4000/admin</code>即可</p>]]></content>
    
    
    <categories>
      
      <category>其他</category>
      
    </categories>
    
    
    <tags>
      
      <tag>个人记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
